{"changed":true,"filter":false,"title":"controle.js","tooltip":"/controle.js","value":"\"use strict\";\n//load modules\nvar b = require('octalbonescript');\nvar bodyParser = require('body-parser');\nvar express = require(\"express\");\nvar app = express();\nvar debug = require('debug')('controle');\nvar pru = require(\"node-pru-extended\");\nvar fs = require(\"fs\");\n\n//Trying to access and/or use the PRU\nconsole.log(pru);\npru.init();//initialize the communications\n//pru.loadDatafile(0,\"/var/www/myPRUcodes/data.bin\");\npru.execute(0,\"/var/www/myPRUcodes/pisca_text.bin\",0);\n//console.log(pru.getSharedRAM());\npru.exit(0);//force the PRU code to terminate\n\n//Using Express to create a server\napp.use(bodyParser.urlencoded({//to support URL-encoded bodies, MUST come before routing\n  extended: true\n}));\n\napp.use(express.static(__dirname));//add the directory where HTML and CSS files are\napp.route('/controle')//used to unite all the requst types for the same route\n/*.get(function (req, res) {\n  //res.send('Hello World!');\n  //res.sendFile(__dirname + \"/controle.html\");//load HTML page\n})*/\n.post(function (req, res) {\n\tvar serverResponse = {command:req.body.command, btn:req.body.btn, val:req.body.val};\n\tvar command = req.body.command, pin = req.body.btn, val = req.body.val;\n\t\n\tif(command == \"pinSwitch\"){//if command passed by client is to switch a pin configuration\n\t\tchangeStatusIO(pin, val);//change the IO status according to the data recieved\n\t\tres.send(serverResponse);//echo the recieved data to the server\n\t}\n\telse if(command == \"getStatus\"){\n\t\t//console.log(getStatusIO());\n\t\tres.send(getStatusIO());\n\t}\n});\n\napp.route('/startrecipe')//used to unite all the requst types for the same route\n.post(function (req, res) {\n\tvar serverResponse = {resp:\"success\"};\n\tvar command = req.body.command; \n\tvar recipesPath = \"./restricted/recipes\";//path to the recipes directory\n\t\n\tif(command == \"getRecipes\"){//if command passed by client is to get the recipe names\n\t\tfs.readdir(recipesPath, function sendRecipeNames(err, files){//try to read files in directory\n\t\t\tif(err){//if something is wrong\n\t\t\t\tdebug(err);//print the error\n\t\t\t\tserverResponse.resp = \"error\";\n\t\t\t\tserverResponse.recipes = err;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor(var i = 0; i < files.length; i++){//iterate the array of names\n\t\t\t\t\tfiles[i] = files[i].replace(\".recipe\", \"\");//remove the file extension\n\t\t\t\t\tfiles[i] = files[i].replace(/_/g, \" \");//replace underlines with spaces\n\t\t\t\t}\n\t\t\t\tserverResponse.recipes = files;\n\t\t\t}\n\t\t\tres.send(serverResponse);//send the recipes if successful, otherwise sends the error\n\t\t});\n\t}\n\telse{\n\t\tconsole.log(\"fez\");\n\t\tres.send(req);\n\t}\n});\n\nfunction changeStatusIO(pin, val){\n\tif(val == \"true\"){//if button is checked\n\t\tall_io[pin].state = b.HIGH;//turn corresponding pin HIGH\n\t\tb.digitalWriteSync(all_io[pin].id, all_io[pin].state);\n\t\tdebug(\"Pin \" + pin + \" turned HIGH\");\n\t}\n\telse if(val == \"false\"){//if button is unchecked\n\t\tall_io[pin].state = b.LOW;//turn corresponding pin LOW\n\t\tb.digitalWriteSync(all_io[pin].id, all_io[pin].state);\n\t\tdebug(\"Pin \" + pin + \" turned LOW\");\n\t}\n\telse{//if it is not a button\n\t\tif(pin == \"servo_pwm\"){//check if this is the PWM\n\t\t\tservo_pwm.state.duty = 0.0325 + (0.0775/180)*val;//turn degree to duty-cycle\n\t\t\tb.analogWrite(servo_pwm.id,servo_pwm.state.duty,servo_pwm.state.freq, function(err_wr){//set PWM\n\t\t\t\tif(err_wr){//if anything goes wrong\n\t\t\t\t\tdebug(err_wr);//print the error\n\t\t\t\t}\n\t\t\t\telse{//otherwise\n\t\t\t\t\tdebug(\"Servo angle set to: \" + val);//print the angle the PWM was set to\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction getStatusIO(){\n\tvar all_io_status = {};//object with all the pin pairs key:value\n\tfor(i = 0; i < all_io_objects.length; i++){//get the pair key:value pin by pin\n\t\tall_io_status[all_io_objects[i]] = all_io[all_io_objects[i]].state;\n\t}\n\treturn(all_io_status);\n}\n\nvar server = app.listen(8587, \"192.168.1.155\", function () {//listen at the port and address\n\tvar host = server.address().address;\n\tvar port = server.address().port;\n\tvar family = server.address().family;\n\tdebug('Express server listening at http://%s:%s %s', host, port, family);\n});\n\n// I/O pins\nfunction PinObjectIO(pinId){//function to create pin object, should recieve pin ID\n\tif(pinId){//if the variable is passed to function or not empty\n\t\tthis.id = pinId; this.state = b.LOW; this.cfg = b.OUTPUT;\n\t}\n\telse{//if no variable is passed or passed empty\n\t\tdebug(\"No variable passed to create pin object\");\n\t\tprocess.exit(1);//exit process with error code\n\t}\n}\nvar led = new PinObjectIO(\"USR1\");\n\nvar mash_pump = new PinObjectIO(\"P8_07\");\nvar boil_pump = new PinObjectIO(\"P8_08\");\nvar pumps = {mash_pump:mash_pump, boil_pump:boil_pump};\n\nvar mash_valve = new PinObjectIO(\"P8_09\");\nvar boil_valve = new PinObjectIO(\"P8_10\");\nvar chill_valve = new PinObjectIO(\"P8_11\");\nvar water_valve = new PinObjectIO(\"P8_12\");\nvar valves = {\tmash_valve:mash_valve, boil_valve:boil_valve,\n\t\t\t\tchill_valve:chill_valve, water_valve:water_valve};\n\nvar mash_heat = new PinObjectIO(\"P8_13\");\nvar boil_heat = new PinObjectIO(\"P8_14\");\nvar heaters = {mash_heat:mash_heat, boil_heat:boil_heat};\n\n\t\t//for servo, use 0.0325 < duty < 0.11 to protect servo integrity\nvar servo_pwm = {id:\"P8_19\", state:{duty:0.11, freq:50}, cfg:b.ANALOG_OUTPUT};//state of PWM is duty-cycle and frequency\n//var servo_pwm = {id:\"P8_19\", state:{duty:0.11, freq:60}};//this is for the SSR test\n\nvar all_io = collect(pumps,valves,heaters,{led:led},{servo_pwm:servo_pwm});\nvar all_io_objects = Object.keys(all_io);//get all the keys, because cannot access object by index, e.g all_io[2]\nvar all_io_pins = [];//all the pins used as an array\nfor (var i = 0; i < all_io_objects.length; i++){//get the pins one by one\n\tall_io_pins[i] = all_io[all_io_objects[i]].id;//and add to the array\n}\n\nvar ioStatus =\t{cfgok:0, gpio:0, pwm:0, analog:0, interrupt:0, total:all_io_objects.length, //helping object\n\t\t\t\t//some functions just to exercise the use of methods\n\t\t\t\tnewGpio:\t\tfunction(){\tthis.cfgok++; this.gpio++;},\n\t\t\t\tnewPwm:\t\t\tfunction(){\tthis.cfgok++; this.pwm++;},\n\t\t\t\tnewAnalog:\t\tfunction(){\tthis.cfgok++; this.analog++;},\n\t\t\t\tnewInterrupt:\tfunction(){\tthis.cfgok++; this.analog++;},\n\t\t\t\tgpio2pwm:\t\tfunction(){ this.gpio--; this.pwm++;},\n\t\t\t\tgpio2interrupt:\tfunction(){ this.gpio--; this.interrupt++;},\n\t\t\t\tpwm2gpio:\t\tfunction(){ this.pwm--; this.gpio++;},\n\t\t\t\tpwm2interrupt:\tfunction(){ this.pwm--; this.interrupt++;},\n\t\t\t\tinterrupt2gpio:\tfunction(){ this.interrupt--; this.gpio++;},\n\t\t\t\tinterrupt2pwm:\tfunction(){ this.interrupt--; this.pwm++;}\n};\n//helping variables\ndebug(ioStatus.total + \" pins being used: \", all_io_pins.toString());\n\n// Pin configuration\ndebug(\"Configuring pins...\");\nfor (var i = 0; i < all_io_objects.length; i++){//set all pins as outputs\n\t(function (pinIndex){//need to create a scope for the current pin variable, because it is asynchronous\n\t\t//debug(\"pin passed is \" + this + \"; pin index passed is \" + pinIndex);//\"this\" is the first parameter passed -> the current pin\n\t\tb.pinMode(this, all_io[all_io_objects[pinIndex]].cfg, function(err, pin){//configure and callback function\n\t\t\tif(err)//if by the end of executing pinMode function, there is an error\n\t\t\t\tconsole.error(err.message);//then the error is printed\n\t\t\telse{//initial state, everyone LOW because HIGH state means ON\n\t\t\t\tif(all_io[all_io_objects[pinIndex]].cfg == b.OUTPUT){//if pin is configured as digital output\n\t\t\t\t\tdebug('    pin ' + pin + ' ready[OUTPUT], ' + (ioStatus.cfgok+1) + \"/\" + ioStatus.total + \"pins configured\");\n\t\t\t\t\tb.digitalWriteSync(pin, all_io[all_io_objects[pinIndex]].state);//state is LOW because of initial values\n\t\t\t\t\t//ioStatus.cfgok++;\n\t\t\t\t\tioStatus.newGpio();//indicates one more pin is configured as gpio\n\t\t\t\t\tif(ioStatus.cfgok == ioStatus.total){//if all pins are already configured\n\t\t\t\t\t\t//interval = setInterval(function(){ioTest()}, 5000);//then start the blinking test very slow\n\t\t\t\t\t\tdebug(ioStatus.gpio + \" pins as GPIO, \" + ioStatus.pwm + \" as PWM, \" + \n\t\t\t\t\t\t\tioStatus.analog + \" as ANALOG, \" + ioStatus.interrupt + \" as INTERRUPT\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(all_io[all_io_objects[pinIndex]].cfg == b.ANALOG_OUTPUT){//if pin is configured as PWM\n\t\t\t\t\tdebug('    pin ' + pin + ' ready[PWM], ' + (ioStatus.cfgok+1) + \"/\" + ioStatus.total + \"pins configured\");\n\t\t\t\t\tb.analogWrite(servo_pwm.id,servo_pwm.state.duty,servo_pwm.state.freq, function(err_wr){//try to configure\n\t\t\t\t\t\tif(err_wr){//if error\n\t\t\t\t\t\t\tdebug(err_wr);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{//if ok\n\t\t\t\t\t\t\tioStatus.newPwm();//indicates one more pin is configured as PWM\n\t\t\t\t\t\t\tif(ioStatus.cfgok == ioStatus.total){//if all pins are already configured\n\t\t\t\t\t\t\t\t//interval = setInterval(function(){ioTest()}, 5000);//then start the blinking test very slow\n\t\t\t\t\t\t\t\tdebug(ioStatus.gpio + \" pins as GPIO, \" + ioStatus.pwm + \" as PWM, \" + \n\t\t\t\t\t\t\t\t\tioStatus.analog + \" as ANALOG, \" + ioStatus.interrupt + \" as INTERRUPT\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/*debug(ioStatus.gpio + \" pins as GPIO, \" + ioStatus.pwm + \" as PWM, \" + \n\t\t\t\t\t\t\t\t\tioStatus.analog + \" as ANALOG, \" + ioStatus.interrupt + \" as INTERRUPT\");*/\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t});//everyone is output\n\t//get all the object keys as vector and use it to access all the object keys\n\t}).call(all_io[all_io_objects[i]].id,i);//passes pin as \"this\" and index as pinIndex\n}\n\t\n//control variables\n//var \n\n//Brewing control\n/*var temp_wort, temp_sparge, time_window;//variables to control temperatures and time window\nturnOnPID(temp_wort, temp_sparge, time_window);//pass the variables to the PID and turn it ON\nif(pru.getSharedRAM() == \"done\"){//if the heating of the mash water is done\n\tmashControl();\n}\n\nfunction mashControl(){//function that controls the mash process \n\t//add the malts to the water\n\tturnOnPID(temp_wort, temp_sparge, time_window);//turn on the temperature control\n\tmash_pump.state = b.HIGH;//mash pump status is updated\n\tb.digitalWriteSync(mash_pump.id, mash_pump.state);//turn the mash pump ON\n\tpru.getSharedRAM();//get the current temperature to display to client\n\t\n}*/\n\n//test to see if the ports work\nvar interval;\n//var mySetInterval = setInterval(ioTest, process.argv[2]);\ndebug(\"Switching time: \" + interval);\n//setInterval(ioTest, interval);//period = interval*IOpins = 500ms*9 = 4.5s\n\nfunction ioTest(){\n\tvar on_count = 0;//number of io turned b.HIGH\n\tvar last_on; //number of last io b.HIGH\n\t\n\tfor(i = 0; i < all_io_objects.length; i++){//check all\n\t\tif(all_io[all_io_objects[i]].state == b.HIGH){//if HIGH\n\t\t\ton_count++;//one more io HIGH\n\t\t\tlast_on = i;//this is the last io HIGH\n\t\t}\n\t}\n\tif(on_count == 1){//if only one IO HIGH\n\t\tif(last_on == 8){//if last pin is the one HIGH\n\t\t\t//debug('Activating pin 0');\n\t\t\tall_io[all_io_objects[last_on]].state = b.LOW;//turn it LOW\n\t\t\tall_io[all_io_objects[0]].state = b.HIGH;//and next one HIGH, which means the first\n\t\t\tb.digitalWriteSync(all_io[all_io_objects[last_on]].id, all_io[all_io_objects[last_on]].state);\n\t\t\tb.digitalWriteSync(all_io[all_io_objects[0]].id, all_io[all_io_objects[0]].state);\n\t\t}\n\t\telse{//if any pin but the last is the one HIGH\n\t\t\t//debug('Activating pin ' + (last_on+1));\n\t\t\tall_io[all_io_objects[last_on]].state = b.LOW;//turn it LOW\n\t\t\tall_io[all_io_objects[last_on+1]].state = b.HIGH;//and next one HIGH\n\t\t\tb.digitalWriteSync(all_io[all_io_objects[last_on]].id, all_io[all_io_objects[last_on]].state);\n\t\t\tb.digitalWriteSync(all_io[all_io_objects[last_on+1]].id, all_io[all_io_objects[last_on+1]].state);\n\t\t\t}\n\t}\n\telse{//if there is more than one IO HIGH\n\t\tfor(i = 1; i < all_io_objects.length; i++){\n\t\t\tall_io[all_io_objects[i]].state = b.LOW;//turn all but first LOW\n\t\t\tb.digitalWriteSync(all_io[all_io_objects[i]].id, all_io[all_io_objects[i]].state);\n\t\t}\n\t\tall_io[all_io_objects[0]].state = b.HIGH;//turn first HIGH\n\t\tb.digitalWriteSync(all_io[all_io_objects[0]].id, all_io[all_io_objects[0]].state);\n\t}\n}\n\nfunction collect() {//function concat objects\n\tvar ret = {};//the new object\n\tvar len = arguments.length;//the total number of objects passed to collect\n\tfor (var i=0; i<len; i++) {//do it for every object passed\n\t\tfor (var p in arguments[i]) {//iterate the i-eth object passed\n\t\t\tif (arguments[i].hasOwnProperty(p)) {//whenever there is a property\n\t\t\t\tret[p] = arguments[i][p];//add the property to the new object\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}","undoManager":{"mark":98,"position":100,"stack":[[{"start":{"row":58,"column":22},"end":{"row":58,"column":23},"action":"insert","lines":["i"],"id":7024}],[{"start":{"row":58,"column":24},"end":{"row":58,"column":25},"action":"insert","lines":["."],"id":7025}],[{"start":{"row":58,"column":25},"end":{"row":58,"column":26},"action":"insert","lines":["r"],"id":7026}],[{"start":{"row":58,"column":26},"end":{"row":58,"column":27},"action":"insert","lines":["e"],"id":7027}],[{"start":{"row":58,"column":25},"end":{"row":58,"column":27},"action":"remove","lines":["re"],"id":7028},{"start":{"row":58,"column":25},"end":{"row":58,"column":34},"action":"insert","lines":["replace()"]}],[{"start":{"row":58,"column":33},"end":{"row":58,"column":35},"action":"insert","lines":["\"\""],"id":7029}],[{"start":{"row":58,"column":34},"end":{"row":58,"column":35},"action":"insert","lines":["."],"id":7030}],[{"start":{"row":58,"column":35},"end":{"row":58,"column":36},"action":"insert","lines":["r"],"id":7031}],[{"start":{"row":58,"column":36},"end":{"row":58,"column":37},"action":"insert","lines":["e"],"id":7032}],[{"start":{"row":58,"column":37},"end":{"row":58,"column":38},"action":"insert","lines":["c"],"id":7033}],[{"start":{"row":58,"column":38},"end":{"row":58,"column":39},"action":"insert","lines":["i"],"id":7034}],[{"start":{"row":58,"column":39},"end":{"row":58,"column":40},"action":"insert","lines":["p"],"id":7035}],[{"start":{"row":58,"column":40},"end":{"row":58,"column":41},"action":"insert","lines":["e"],"id":7036}],[{"start":{"row":58,"column":42},"end":{"row":58,"column":43},"action":"insert","lines":[","],"id":7037}],[{"start":{"row":58,"column":43},"end":{"row":58,"column":44},"action":"insert","lines":[" "],"id":7038}],[{"start":{"row":58,"column":44},"end":{"row":58,"column":46},"action":"insert","lines":["\"\""],"id":7039}],[{"start":{"row":58,"column":47},"end":{"row":58,"column":48},"action":"insert","lines":[";"],"id":7040}],[{"start":{"row":58,"column":48},"end":{"row":59,"column":0},"action":"insert","lines":["",""],"id":7041},{"start":{"row":59,"column":0},"end":{"row":59,"column":5},"action":"insert","lines":["\t\t\t\t\t"]}],[{"start":{"row":59,"column":5},"end":{"row":59,"column":48},"action":"insert","lines":["files[i] = files[i].replace(\".recipe\", \"\");"],"id":7042}],[{"start":{"row":59,"column":33},"end":{"row":59,"column":42},"action":"remove","lines":["\".recipe\""],"id":7043},{"start":{"row":59,"column":33},"end":{"row":59,"column":34},"action":"insert","lines":["/"]}],[{"start":{"row":59,"column":34},"end":{"row":59,"column":35},"action":"insert","lines":["/"],"id":7044}],[{"start":{"row":59,"column":34},"end":{"row":59,"column":35},"action":"insert","lines":["_"],"id":7045}],[{"start":{"row":59,"column":36},"end":{"row":59,"column":37},"action":"insert","lines":["g"],"id":7046}],[{"start":{"row":59,"column":40},"end":{"row":59,"column":41},"action":"insert","lines":[" "],"id":7047}],[{"start":{"row":58,"column":48},"end":{"row":58,"column":49},"action":"insert","lines":["/"],"id":7048}],[{"start":{"row":58,"column":49},"end":{"row":58,"column":50},"action":"insert","lines":["/"],"id":7049}],[{"start":{"row":58,"column":50},"end":{"row":58,"column":51},"action":"insert","lines":["r"],"id":7050}],[{"start":{"row":58,"column":51},"end":{"row":58,"column":52},"action":"insert","lines":["e"],"id":7051}],[{"start":{"row":58,"column":52},"end":{"row":58,"column":53},"action":"insert","lines":["m"],"id":7052}],[{"start":{"row":58,"column":53},"end":{"row":58,"column":54},"action":"insert","lines":["o"],"id":7053}],[{"start":{"row":58,"column":54},"end":{"row":58,"column":55},"action":"insert","lines":["v"],"id":7054}],[{"start":{"row":58,"column":55},"end":{"row":58,"column":56},"action":"insert","lines":["e"],"id":7055}],[{"start":{"row":58,"column":56},"end":{"row":58,"column":57},"action":"insert","lines":[" "],"id":7056}],[{"start":{"row":58,"column":57},"end":{"row":58,"column":58},"action":"insert","lines":["t"],"id":7057}],[{"start":{"row":58,"column":58},"end":{"row":58,"column":59},"action":"insert","lines":["h"],"id":7058}],[{"start":{"row":58,"column":59},"end":{"row":58,"column":60},"action":"insert","lines":["e"],"id":7059}],[{"start":{"row":58,"column":60},"end":{"row":58,"column":61},"action":"insert","lines":[" "],"id":7060}],[{"start":{"row":58,"column":61},"end":{"row":58,"column":62},"action":"insert","lines":["e"],"id":7061}],[{"start":{"row":58,"column":62},"end":{"row":58,"column":63},"action":"insert","lines":["x"],"id":7062}],[{"start":{"row":58,"column":62},"end":{"row":58,"column":63},"action":"remove","lines":["x"],"id":7063}],[{"start":{"row":58,"column":61},"end":{"row":58,"column":62},"action":"remove","lines":["e"],"id":7064}],[{"start":{"row":58,"column":61},"end":{"row":58,"column":62},"action":"insert","lines":["f"],"id":7065}],[{"start":{"row":58,"column":62},"end":{"row":58,"column":63},"action":"insert","lines":["i"],"id":7066}],[{"start":{"row":58,"column":63},"end":{"row":58,"column":64},"action":"insert","lines":["l"],"id":7067}],[{"start":{"row":58,"column":64},"end":{"row":58,"column":65},"action":"insert","lines":["e"],"id":7068}],[{"start":{"row":58,"column":65},"end":{"row":58,"column":66},"action":"insert","lines":[" "],"id":7069}],[{"start":{"row":58,"column":66},"end":{"row":58,"column":67},"action":"insert","lines":["e"],"id":7070}],[{"start":{"row":58,"column":67},"end":{"row":58,"column":68},"action":"insert","lines":["x"],"id":7071}],[{"start":{"row":58,"column":68},"end":{"row":58,"column":69},"action":"insert","lines":["t"],"id":7072}],[{"start":{"row":58,"column":69},"end":{"row":58,"column":70},"action":"insert","lines":["e"],"id":7073}],[{"start":{"row":58,"column":70},"end":{"row":58,"column":71},"action":"insert","lines":["n"],"id":7074}],[{"start":{"row":58,"column":71},"end":{"row":58,"column":72},"action":"insert","lines":["s"],"id":7075}],[{"start":{"row":58,"column":72},"end":{"row":58,"column":73},"action":"insert","lines":["i"],"id":7076}],[{"start":{"row":58,"column":73},"end":{"row":58,"column":74},"action":"insert","lines":["o"],"id":7077}],[{"start":{"row":58,"column":74},"end":{"row":58,"column":75},"action":"insert","lines":["n"],"id":7078}],[{"start":{"row":59,"column":44},"end":{"row":59,"column":45},"action":"insert","lines":["/"],"id":7079}],[{"start":{"row":59,"column":45},"end":{"row":59,"column":46},"action":"insert","lines":["/"],"id":7080}],[{"start":{"row":59,"column":46},"end":{"row":59,"column":47},"action":"insert","lines":["r"],"id":7081}],[{"start":{"row":59,"column":47},"end":{"row":59,"column":48},"action":"insert","lines":["e"],"id":7082}],[{"start":{"row":59,"column":48},"end":{"row":59,"column":49},"action":"insert","lines":["p"],"id":7083}],[{"start":{"row":59,"column":49},"end":{"row":59,"column":50},"action":"insert","lines":["a"],"id":7084}],[{"start":{"row":59,"column":49},"end":{"row":59,"column":50},"action":"remove","lines":["a"],"id":7085}],[{"start":{"row":59,"column":49},"end":{"row":59,"column":50},"action":"insert","lines":["l"],"id":7086}],[{"start":{"row":59,"column":50},"end":{"row":59,"column":51},"action":"insert","lines":["a"],"id":7087}],[{"start":{"row":59,"column":51},"end":{"row":59,"column":52},"action":"insert","lines":["c"],"id":7088}],[{"start":{"row":59,"column":52},"end":{"row":59,"column":53},"action":"insert","lines":["e"],"id":7089}],[{"start":{"row":59,"column":53},"end":{"row":59,"column":54},"action":"insert","lines":[" "],"id":7090}],[{"start":{"row":59,"column":54},"end":{"row":59,"column":55},"action":"insert","lines":["u"],"id":7091}],[{"start":{"row":59,"column":55},"end":{"row":59,"column":56},"action":"insert","lines":["n"],"id":7092}],[{"start":{"row":59,"column":56},"end":{"row":59,"column":57},"action":"insert","lines":["d"],"id":7093}],[{"start":{"row":59,"column":57},"end":{"row":59,"column":58},"action":"insert","lines":["e"],"id":7094}],[{"start":{"row":59,"column":58},"end":{"row":59,"column":59},"action":"insert","lines":["r"],"id":7095}],[{"start":{"row":59,"column":59},"end":{"row":59,"column":60},"action":"insert","lines":["l"],"id":7096}],[{"start":{"row":59,"column":60},"end":{"row":59,"column":61},"action":"insert","lines":["i"],"id":7097}],[{"start":{"row":59,"column":61},"end":{"row":59,"column":62},"action":"insert","lines":["n"],"id":7098}],[{"start":{"row":59,"column":62},"end":{"row":59,"column":63},"action":"insert","lines":["e"],"id":7099}],[{"start":{"row":59,"column":63},"end":{"row":59,"column":64},"action":"insert","lines":["s"],"id":7100}],[{"start":{"row":59,"column":64},"end":{"row":59,"column":65},"action":"insert","lines":[" "],"id":7101}],[{"start":{"row":59,"column":65},"end":{"row":59,"column":66},"action":"insert","lines":["w"],"id":7102}],[{"start":{"row":59,"column":66},"end":{"row":59,"column":67},"action":"insert","lines":["i"],"id":7103}],[{"start":{"row":59,"column":67},"end":{"row":59,"column":68},"action":"insert","lines":["t"],"id":7104}],[{"start":{"row":59,"column":68},"end":{"row":59,"column":69},"action":"insert","lines":["h"],"id":7105}],[{"start":{"row":59,"column":69},"end":{"row":59,"column":70},"action":"insert","lines":[" "],"id":7106}],[{"start":{"row":59,"column":70},"end":{"row":59,"column":71},"action":"insert","lines":["s"],"id":7107}],[{"start":{"row":59,"column":71},"end":{"row":59,"column":72},"action":"insert","lines":["p"],"id":7108}],[{"start":{"row":59,"column":72},"end":{"row":59,"column":73},"action":"insert","lines":["a"],"id":7109}],[{"start":{"row":59,"column":73},"end":{"row":59,"column":74},"action":"insert","lines":["c"],"id":7110}],[{"start":{"row":59,"column":74},"end":{"row":59,"column":75},"action":"insert","lines":["e"],"id":7111}],[{"start":{"row":59,"column":75},"end":{"row":59,"column":76},"action":"insert","lines":["s"],"id":7112}],[{"start":{"row":62,"column":0},"end":{"row":62,"column":34},"action":"remove","lines":["\t\t\t\tdebug(serverResponse.recipes);"],"id":7113}],[{"start":{"row":61,"column":35},"end":{"row":62,"column":0},"action":"remove","lines":["",""],"id":7114}],[{"start":{"row":53,"column":19},"end":{"row":53,"column":26},"action":"remove","lines":["command"],"id":7115},{"start":{"row":53,"column":19},"end":{"row":53,"column":20},"action":"insert","lines":["r"]}],[{"start":{"row":53,"column":20},"end":{"row":53,"column":21},"action":"insert","lines":["e"],"id":7116}],[{"start":{"row":53,"column":21},"end":{"row":53,"column":22},"action":"insert","lines":["s"],"id":7117}],[{"start":{"row":53,"column":22},"end":{"row":53,"column":23},"action":"insert","lines":["p"],"id":7118}],[{"start":{"row":45,"column":23},"end":{"row":45,"column":30},"action":"remove","lines":["command"],"id":7119},{"start":{"row":45,"column":23},"end":{"row":45,"column":24},"action":"insert","lines":["r"]}],[{"start":{"row":45,"column":24},"end":{"row":45,"column":25},"action":"insert","lines":["e"],"id":7120}],[{"start":{"row":45,"column":25},"end":{"row":45,"column":26},"action":"insert","lines":["s"],"id":7121}],[{"start":{"row":45,"column":26},"end":{"row":45,"column":27},"action":"insert","lines":["p"],"id":7122}],[{"start":{"row":30,"column":34},"end":{"row":30,"column":35},"action":"insert","lines":["\u0001"],"id":7123}],[{"start":{"row":30,"column":34},"end":{"row":30,"column":35},"action":"remove","lines":["\u0001"],"id":7124}]]},"ace":{"folds":[],"scrolltop":120,"scrollleft":0,"selection":{"start":{"row":30,"column":34},"end":{"row":30,"column":34},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":6,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1447361017000}